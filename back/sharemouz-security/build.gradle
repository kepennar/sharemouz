/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kepennar' at '8/3/14 9:20 PM' with Gradle 2.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.0/userguide/tutorial_java_projects.html
 */


buildscript {
    repositories() {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.1.5.RELEASE'
        classpath "net.saliman:gradle-cobertura-plugin:2.2.2"
    }
}

apply plugin: 'spring-boot'
apply plugin: 'cobertura'
apply plugin: 'idea'
apply plugin: 'eclipse'


jar {
    baseName = 'sharemouz-security'
    version = '0.0.1'
}

repositories {
    mavenCentral()
}
configurations {
    querydslapt
}

dependencies {
    
    compile project(':sharemouz-common')
    
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.security:spring-security-openid'


    compile 'com.mysema.querydsl:querydsl-mongodb:3.4.2'
    querydslapt 'com.mysema.querydsl:querydsl-apt:3.4.2'

    compile 'javax.inject:javax.inject:1'

    testCompile "junit:junit:4.11"
}


sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}
task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}
