def javaVersion= '1.8'
def javaProjects = [ project(':sharemouz-security'), project(':sharemouz-reservations'), project(':sharemouz-site') ]

buildscript {
    repositories() {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.1.5.RELEASE'
        classpath "net.saliman:gradle-cobertura-plugin:2.2.2"
    }
}

wrapper.gradleVersion = '1.12'


configure(allprojects) {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    idea.module {
        excludeDirs += [
                file('bin'),      // containing build artifacts from Eclipse (if any)
                file('work'),     // containing transient artifacts used by embedded Tomcat
                file('logs'),     // containing app logs written by embedded Tomcat
                file('data'),     // containing logs and data written by elasticsearch
                file('.settings') // containing intentionally checked-in Eclipse metadata
        ]
    }
}


configure(javaProjects) {
    apply plugin: 'java'

    targetCompatibility = javaVersion
    sourceCompatibility = javaVersion

    repositories {
	    mavenCentral()
	}

    dependencies {
        compile 'org.slf4j:slf4j-api'


        testCompile 'junit:junit'
        testCompile 'org.assertj:assertj-core:1.6.0'
    }

    configurations {
        // replaced with jcl-over-slf4j
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        // replaced with log4j-over-slf4j
        all*.exclude group: 'log4j', module: 'log4j'
    }

    // Ensure that all Gradle-compiled classes are available to Eclipse's
    // classpath.
    eclipseClasspath.dependsOn testClasses

    // Skip generation and removal of .settings/org.eclipse.jdt.core.prefs files
    // during the normal `gradle eclipse` / `gradle cleanEclipse` lifecycle, as
    // these files have been checked in with formatting settings imported from
    // style/sagan-format.xml and style/sagan.importorder.
    // See http://www.gradle.org/docs/current/userguide/eclipse_plugin.html
    eclipseJdt.onlyIf { false }
    cleanEclipseJdt.onlyIf { false }
}

